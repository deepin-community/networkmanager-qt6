/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was:
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DNSMANAGERINTERFACE_H
#define DNSMANAGERINTERFACE_H

#include "generictypes.h"

#include <QDBusAbstractInterface>
#include <QObject>
#include <QString>

/*
 * Proxy class for interface org.freedesktop.NetworkManager.DnsManager
 */
class OrgFreedesktopNetworkManagerDnsManagerInterface : public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
#ifdef NMQT_STATIC
    {
        return "org.kde.fakenetwork.DnsManager";
    }
#else
    {
        return "org.freedesktop.NetworkManager.DnsManager";
    }
#endif

public:
    OrgFreedesktopNetworkManagerDnsManagerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgFreedesktopNetworkManagerDnsManagerInterface() override;

    Q_PROPERTY(NMVariantMapList Configuration READ configuration)
    inline NMVariantMapList configuration() const
    {
        return qvariant_cast<NMVariantMapList>(property("Configuration"));
    }

    Q_PROPERTY(QString Mode READ mode)
    inline QString mode() const
    {
        return qvariant_cast<QString>(property("Mode"));
    }

    Q_PROPERTY(QString RcManager READ rcManager)
    inline QString rcManager() const
    {
        return qvariant_cast<QString>(property("RcManager"));
    }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
};

#endif

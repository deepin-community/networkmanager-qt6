/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was:
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef SECRETAGENTADAPTOR_H
#define SECRETAGENTADAPTOR_H

#include "secretagent.h"

#include <QDBusAbstractAdaptor>
#include <QDBusObjectPath>
#include <QObject>
#include <QStringList>

QT_BEGIN_NAMESPACE
class QByteArray;
template<class T>
class QList;
template<class Key, class Value>
class QMap;
class QString;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.freedesktop.NetworkManager.SecretAgent
 */
class SecretAgentAdaptor : public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.freedesktop.NetworkManager.SecretAgent")
    Q_CLASSINFO("D-Bus Introspection",
                ""
                "  <interface name=\"org.freedesktop.NetworkManager.SecretAgent\">\n"
                "    <method name=\"GetSecrets\">\n"
                "      <annotation value=\"impl_secret_agent_get_secrets\" name=\"org.freedesktop.DBus.GLib.CSymbol\"/>\n"
                "      <annotation value=\"\" name=\"org.freedesktop.DBus.GLib.Async\"/>\n"
                "      <annotation value=\"NMVariantMapMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
                "      <arg direction=\"in\" type=\"a{sa{sv}}\" name=\"connection\"/>\n"
                "      <arg direction=\"in\" type=\"o\" name=\"connection_path\"/>\n"
                "      <arg direction=\"in\" type=\"s\" name=\"setting_name\"/>\n"
                "      <arg direction=\"in\" type=\"as\" name=\"hints\"/>\n"
                "      <arg direction=\"in\" type=\"u\" name=\"flags\"/>\n"
                "      <annotation value=\"NMVariantMapMap\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
                "      <arg direction=\"out\" type=\"a{sa{sv}}\" name=\"secrets\"/>\n"
                "    </method>\n"
                "    <method name=\"CancelGetSecrets\">\n"
                "      <annotation value=\"impl_secret_agent_cancel_get_secrets\" name=\"org.freedesktop.DBus.GLib.CSymbol\"/>\n"
                "      <annotation value=\"\" name=\"org.freedesktop.DBus.GLib.Async\"/>\n"
                "      <arg direction=\"in\" type=\"o\" name=\"connection_path\"/>\n"
                "      <arg direction=\"in\" type=\"s\" name=\"setting_name\"/>\n"
                "    </method>\n"
                "    <method name=\"SaveSecrets\">\n"
                "      <annotation value=\"impl_secret_agent_save_secrets\" name=\"org.freedesktop.DBus.GLib.CSymbol\"/>\n"
                "      <annotation value=\"\" name=\"org.freedesktop.DBus.GLib.Async\"/>\n"
                "      <annotation value=\"NMVariantMapMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
                "      <arg direction=\"in\" type=\"a{sa{sv}}\" name=\"connection\"/>\n"
                "      <arg direction=\"in\" type=\"o\" name=\"connection_path\"/>\n"
                "    </method>\n"
                "    <method name=\"DeleteSecrets\">\n"
                "      <annotation value=\"impl_secret_agent_delete_secrets\" name=\"org.freedesktop.DBus.GLib.CSymbol\"/>\n"
                "      <annotation value=\"\" name=\"org.freedesktop.DBus.GLib.Async\"/>\n"
                "      <annotation value=\"NMVariantMapMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
                "      <arg direction=\"in\" type=\"a{sa{sv}}\" name=\"connection\"/>\n"
                "      <arg direction=\"in\" type=\"o\" name=\"connection_path\"/>\n"
                "    </method>\n"
                "  </interface>\n"
                "")
public:
    SecretAgentAdaptor(NetworkManager::SecretAgent *parent);
    ~SecretAgentAdaptor() override;

    inline NetworkManager::SecretAgent *parent() const
    {
        return static_cast<NetworkManager::SecretAgent *>(QObject::parent());
    }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void CancelGetSecrets(const QDBusObjectPath &connection_path, const QString &setting_name);
    void DeleteSecrets(NMVariantMapMap connection, const QDBusObjectPath &connection_path);
    NMVariantMapMap
    GetSecrets(NMVariantMapMap connection, const QDBusObjectPath &connection_path, const QString &setting_name, const QStringList &hints, uint flags);
    void SaveSecrets(NMVariantMapMap connection, const QDBusObjectPath &connection_path);
Q_SIGNALS: // SIGNALS
};

#endif

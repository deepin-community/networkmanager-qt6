/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was:
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MACVLANDEVICEINTERFACE_H
#define MACVLANDEVICEINTERFACE_H

#include "generictypes.h"

#include <QDBusAbstractInterface>
#include <QDBusObjectPath>
#include <QObject>
#include <QString>
#include <QVariant>

/*
 * Proxy class for interface org.freedesktop.NetworkManager.Device.Macvlan
 */
class OrgFreedesktopNetworkManagerDeviceMacvlanInterface : public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
#ifdef NMQT_STATIC
    {
        return "org.kde.fakenetwork.Device.Macvlan";
    }
#else
    {
        return "org.freedesktop.NetworkManager.Device.Macvlan";
    }
#endif

public:
    OrgFreedesktopNetworkManagerDeviceMacvlanInterface(const QString &service,
                                                       const QString &path,
                                                       const QDBusConnection &connection,
                                                       QObject *parent = nullptr);

    ~OrgFreedesktopNetworkManagerDeviceMacvlanInterface() override;

    Q_PROPERTY(QString Mode READ mode)
    inline QString mode() const
    {
        return qvariant_cast<QString>(property("Mode"));
    }

    Q_PROPERTY(bool NoPromisc READ noPromisc)
    inline bool noPromisc() const
    {
        return qvariant_cast<bool>(property("NoPromisc"));
    }

    Q_PROPERTY(QDBusObjectPath Parent READ parent)
    inline QDBusObjectPath parent() const
    {
        return qvariant_cast<QDBusObjectPath>(property("Parent"));
    }

    Q_PROPERTY(bool Tap READ tap)
    inline bool tap() const
    {
        return qvariant_cast<bool>(property("Tap"));
    }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void PropertiesChanged(const QVariantMap &properties);
};

#endif
